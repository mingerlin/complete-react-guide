[{"/Users/minger/Desktop/complete-react-guide/src/index.js":"1","/Users/minger/Desktop/complete-react-guide/src/App.js":"2","/Users/minger/Desktop/complete-react-guide/src/components/Users.js":"3","/Users/minger/Desktop/complete-react-guide/src/components/User.js":"4","/Users/minger/Desktop/complete-react-guide/src/components/UserFinder.js":"5","/Users/minger/Desktop/complete-react-guide/src/components/ErrorBoundary.js":"6","/Users/minger/Desktop/complete-react-guide/src/store/users-context.js":"7"},{"size":142,"mtime":1616595549000,"results":"8","hashOfConfig":"9"},{"size":429,"mtime":1646802655390,"results":"10","hashOfConfig":"9"},{"size":1479,"mtime":1646803394352,"results":"11","hashOfConfig":"9"},{"size":378,"mtime":1646802538215,"results":"12","hashOfConfig":"9"},{"size":2560,"mtime":1646805504866,"results":"13","hashOfConfig":"9"},{"size":585,"mtime":1646806736022,"results":"14","hashOfConfig":"9"},{"size":118,"mtime":1646803070165,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"i4ztr3",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minger/Desktop/complete-react-guide/src/index.js",[],["33","34"],"/Users/minger/Desktop/complete-react-guide/src/App.js",[],"/Users/minger/Desktop/complete-react-guide/src/components/Users.js",["35"],"import { Component, useState } from \"react\";\nimport User from \"./User\";\n\nimport classes from \"./Users.module.css\";\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showUsers: true,\n    };\n  }\n\n  componentDidUpdate() {\n    if (this.props.users.length === 0) {\n      throw new Error(\"No Users Provided!\");\n    }\n  }\n\n  toggleUsersHandler() {\n    this.setState((curState) => {\n      return { showUsers: !curState.showUsers };\n    });\n  }\n\n  render() {\n    const usersList = (\n      <ul>\n        {this.props.users.map((user) => (\n          <User key={user.id} name={user.name} />\n        ))}\n      </ul>\n    );\n\n    return (\n      <div className={classes.users}>\n        <button onClick={this.toggleUsersHandler.bind(this)}>\n          {this.state.showUsers ? \"Hide\" : \"Show\"} Users\n        </button>\n        {this.state.showUsers && usersList}\n      </div>\n    );\n  }\n}\n// const Users = () => {\n//   const [showUsers, setShowUsers] = useState(true);\n\n//   const toggleUsersHandler = () => {\n//     setShowUsers((curState) => !curState);\n//   };\n\n// const usersList = (\n//   <ul>\n//     {DUMMY_USERS.map((user) => (\n//       <User key={user.id} name={user.name} />\n//     ))}\n//   </ul>\n// );\n\n//   return (\n//     <div className={classes.users}>\n//       <button onClick={oggleUsersHandler}>\n//         {showUsers ? \"Hide\" : \"Show\"} Users\n//       </button>\n//       {showUsers && usersList}\n//     </div>\n//   );\n// };\n\nexport default Users;\n","/Users/minger/Desktop/complete-react-guide/src/components/User.js",[],"/Users/minger/Desktop/complete-react-guide/src/components/UserFinder.js",["36","37"],"import { Fragment, useState, useEffect, Component } from \"react\";\nimport classes from \"./UserFinder.module.css\";\nimport Users from \"./Users\";\nimport UsersContext from \"../store/users-context\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\n// const DUMMY_USERS = [\n//   { id: \"u1\", name: \"Max\" },\n//   { id: \"u2\", name: \"Manuel\" },\n//   { id: \"u3\", name: \"Julie\" },\n// ];\n\nclass UserFinder extends Component {\n  // this is another way to use context\n  static contextType = UsersContext;\n\n  constructor() {\n    super();\n    this.state = {\n      filteredUsers: [],\n      searchTerm: \"\",\n    };\n  }\n  componentDidMount() {\n    // Send http requests\n    this.setState({ filteredUsers: this.context.users });\n  }\n\n  componentDidUpdate(prevProp, prevState) {\n    // only rerender the component when prev state is different than the curr state\n    // this is to prevent infinity loop\n    if (prevState.searchTerm !== this.state.searchTerm) {\n      this.setState({\n        filteredUsers: this.context.users.filter((user) =>\n          user.name.includes(this.state.searchTerm)\n        ),\n      });\n    }\n  }\n\n  searchChangeHandler(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n\n  // this is one way to useContext\n  // render() {\n  //   return (\n  //     <Fragment>\n  //       <UsersContext.Consumer>\n  //         <div className={classes.finder}>\n  //           <input\n  //             type=\"search\"\n  //             onChange={this.searchChangeHandler.bind(this)}\n  //           />\n  //         </div>\n  //         <Users users={this.state.filteredUsers} />\n  //       </UsersContext.Consumer>\n  //     </Fragment>\n  //   );\n  // }\n  render() {\n    return (\n      <Fragment>\n        <div className={classes.finder}>\n          <input type=\"search\" onChange={this.searchChangeHandler.bind(this)} />\n        </div>\n        <ErrorBoundary>\n          <Users users={this.state.filteredUsers} />\n        </ErrorBoundary>\n      </Fragment>\n    );\n  }\n}\n\n// const UserFinder = () => {\n//   const [filteredUsers, setFilteredUsers] = useState(DUMMY_USERS);\n//   const [searchTerm, setSearchTerm] = useState(\"\");\n\n//   useEffect(() => {\n//     setFilteredUsers(\n//       DUMMY_USERS.filter((user) => user.name.includes(searchTerm))\n//     );\n//   }, [searchTerm]);\n\n//   const searchChangeHandler = (event) => {\n//     setSearchTerm(event.target.value);\n//   };\n\n//   return (\n//     <Fragment>\n//       <input type=\"search\" onChange={searchChangeHandler} />\n//       <Users users={filteredUsers} />\n//     </Fragment>\n//   );\n// };\n\nexport default UserFinder;\n","/Users/minger/Desktop/complete-react-guide/src/components/ErrorBoundary.js",[],"/Users/minger/Desktop/complete-react-guide/src/store/users-context.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":1,"column":21,"nodeType":"44","messageId":"45","endLine":1,"endColumn":29},{"ruleId":"42","severity":1,"message":"43","line":1,"column":20,"nodeType":"44","messageId":"45","endLine":1,"endColumn":28},{"ruleId":"42","severity":1,"message":"46","line":1,"column":30,"nodeType":"44","messageId":"45","endLine":1,"endColumn":39},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]